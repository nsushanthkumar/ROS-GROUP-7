import RPi.GPIO as GPIO
import curses
from time import sleep

en = 25
in1 = 23
in2 = 24
en1 = 17
in3 = 22
in4 = 27
temp1 = 1

GPIO.setmode(GPIO.BCM)
GPIO.setup(in1,GPIO.OUT)
GPIO.setup(in2,GPIO.OUT)
GPIO.setup(in3,GPIO.OUT)
GPIO.setup(in4,GPIO.OUT)
GPIO.setup(en,GPIO.OUT)

GPIO.setup(en1,GPIO.OUT)
GPIO.setup(in1,GPIO.LOW)
GPIO.setup(in2,GPIO.LOW)
GPIO.setup(in3,GPIO.LOW)
GPIO.setup(in4,GPIO.LOW)

p1 = GPIO.PWM(en,1000)
p2 = GPIO.PWM(en1,1000)

GPIO.output(in1,GPIO.LOW)
GPIO.output(in2,GPIO.LOW)
GPIO.output(in3,GPIO.LOW)
GPIO.output(in4,GPIO.LOW)

p1.start(25)
p2.start(25)
print("working")

screen = curses.initscr()
curses.noecho()
curses.cbreak()
screen.keypad(True)
GPIO.output(in2,GPIO.LOW)

def forward():
	GPIO.output(in1,GPIO.HIGH)
	GPIO.output(in2,GPIO.LOW)
	GPIO.output(in3,GPIO.HIGH)
	GPIO.output(in4,GPIO.LOW)
def backward():
	GPIO.output(in1,GPIO.LOW)
	GPIO.output(in2,GPIO.HIGH)
	GPIO.output(in3,GPIO.LOW)
	GPIO.output(in4,GPIO.HIGH)
def right():
	GPIO.output(in1,GPIO.HIGH)
	GPIO.output(in2,GPIO.LOW)
	GPIO.output(in3,GPIO.LOW)
	GPIO.output(in4,GPIO.LOW)
def left():
	GPIO.output(in1,GPIO.LOW)
	GPIO.output(in2,GPIO.LOW)
	GPIO.output(in3,GPIO.HIGH)
	GPIO.output(in4,GPIO.LOW)
def back_right():
	GPIO.output(in1,GPIO.LOW)
	GPIO.output(in2,GPIO.LOW)
	GPIO.output(in3,GPIO.LOW)
	GPIO.output(in4,GPIO.HIGH)
def back_left():
	GPIO.output(in1,GPIO.LOW)
	GPIO.output(in2,GPIO.HIGH)
	GPIO.output(in3,GPIO.LOW)
	GPIO.output(in4,GPIO.LOW)
def brake():
	GPIO.output(in1,GPIO.LOW)
	GPIO.output(in2,GPIO.LOW)
	GPIO.output(in3,GPIO.LOW)
	GPIO.output(in4,GPIO.LOW)
try:
	while True:
		char = screen.getch()
		if char == ord('A'):
			print("RECIEVED LETTER A")
			print("MOVING FORWARD")
			forward()
			sleep(1.5)
			brake()
			sleep(0.5)
			print("MOVING RIGHT")
			right()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(1.5)
			brake()
			sleep(0.5)
			print("MOVING RIGHT")
			right()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(1.5)
			brake()
			sleep(0.5)
			print("MOVING BACKWARD")
			backward()
			sleep(0.75)
			brake()
			sleep(0.5)
			print("BACK LEFT")
			back_left()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING BACKWARD")
			backward()
			sleep(1.5)
			brake()
			sleep(0.5)
		if char == ord('B'):
			print("RECIEVED LETTER B")
			print("MOVING FORWARD")
			forward()
			sleep(1.5)
			brake()
			sleep(0.5)
			print("TURNING RIGHT")
			right()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(0.75)
			brake()
			sleep(0.5)
			print("TURNING RIGHT")
			right()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(0.75)
			brake()
			sleep(0.5)
			print("TURNING RIGHT")
			right()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(2)
			brake()
			sleep(0.5)
			print("MOVING BACKWARD")
			backward()
			sleep(2)
			brake()
			sleep(0.5)
			print("MOVING BACK RIGHT")
			back_right()
			sleep(1)
			brake()
			sleep(0.5)
			print("BACKWARD")
			backward()
			sleep(2)
			brake()
			sleep(0.5)
			print("MOVING BACK RIGHT")
			back_right()
			sleep(2)
			brake()
			sleep(0.5)
			print("MOVING BACKWARD")
			backward()
			sleep(2)
			brake()
			sleep(0.5)
		if char == ord('!'):
			GPIO.cleanup()
			break
		if char == ord('C'):
			print("RECIEVED LETTER C")
			print("MOVING BACKWARD")
			backward()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING BACK LEFT")
			back_left()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING BACKWARD")
			backward()
			sleep(1.5)
			brake()
			sleep(0.5)
			print("MOVING BACK LEFT")
			back_left()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING BACKWARD")
			backward()
			sleep(1)
			brake()
			sleep(0.5)
		if char == ord('D'):
			print("RECIEVED LETTER D")
			print("MOVING FORWARD")
			forward()
			sleep(1.5)
			brake()
			sleep(0.5)
			print("MOVING RIGHT")
			right()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING RIGHT")
			right()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(1.5)
			brake()
			sleep(0.5)
			print("MOVING RIGHT")
			right()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(1)
			brake()
			sleep(0.5)
		if char == ord('E'):
			print("RECIEVED LETTER E")
			print("MOVING BACKWARD")
			backward()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING BACK LEFT")
			back_left()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING BACKWARD")
			backward()
			sleep(0.75)
			brake()
			sleep(0.5)
			print("MOVING BACK LEFT")
			back_left()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING BACKWARD")
			backward()
			sleep(0.6)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(0.6)
			brake()
			sleep(0.5)
			print("MOVING LEFT")
			left()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(0.75)
			brake()
			sleep(0.5)
			print("MOVING LEFT")
			left()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(1)
			brake()
			sleep(0.5)
		if char == ord('F'):
			print("RECIEVED LETTER F")
			print("MOVING LEFT")
			left()
			sleep(1)#90
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(0.75)
			brake()
			sleep(0.5)
			print("MOVING LEFT")
			left()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(0.5)
			brake()
			sleep(0.5)
			print("MOVING LEFT")
			left()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(0.5)
			brake()
			sleep(0.5)
			print("MOVING BACKWARD")
			backward()
			sleep(0.5)
			brake()
			sleep(0.5)
			print("MOVING RIGHT")
			right()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(0.5)
			brake()
			sleep(0.5)
		if char == ord('G'):
			print("Recieved letter G")
			print("MOVING LEFT")
			left()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING LEFT")
			left()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING LEFT")
			left()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING LEFT")
			left()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(0.5)
			brake()
			sleep(0.5)
			print("MOVING LEFT")
			left()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(0.5)
			brake()
			sleep(0.5)
		if char == ord('H'):
			print("RECIEVED LETTER H")
			print("MOVING FORWARD")
			forward()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING BACKWARD")
			backward()
			sleep(0.5)
			brake()
			sleep(0.5)
			print("MOVING BAACK LEFT")
			back_left()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING BACKWARD")
			backward()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING BACK LEFT")
			back_left()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING BACKWARD")
			backward()
			sleep(0.5)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(1)
			brake()
			sleep(0.5)
		if char == ord('I'):
			print("RECIEVED LETTER I")
			print("MOVING RIGHT")
			right()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(0.5)
			brake()
			sleep(0.5)
			print("MOVING BACKWARD")
			backward()
			sleep(0.25)
			brake()
			sleep(0.5)
			print("MOVING BACK LEFT")
			back_left()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING BACKWARD")
			backward()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING RIGHT")
			right()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(0.5)
			brake()
			sleep(0.5)
			print("MOVING BACKWARD")
			backward()
			sleep(1)
			brake()
			sleep(0.5)
		if char == ord('J'):
			print("RECIEVED LETTER J")
			print("MOVING FORWARD")
			forward()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING RIGHT")
			right()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING RIGHT")
			right()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING RIGHT")
			right()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(0.4)
			brake()
			sleep()
		if char == ord('K'):
			print("RECIEVED LETTER K")
			print("MOVING FORWARD")
			forward()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING BACKWARD")
			backward()
			sleep(0.5)
			brake()
			sleep(0.5)
			print("MOVING RIGHT")
			right()
			sleep(0.5)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(0.707)
			brake()
			sleep(0.5)
			print("MOVING BACKWARD")
			backward()
			sleep(0.707)
			brake()
			sleep(0.5)
			print("MOVING LEFT")
			left()
			sleep(0.5)
			brake()
			sleep(0.5)
			print("MOVING BACK LEFT")
			back_left()
			sleep(0.5)
			brake()
			sleep(0.5)
			print("MOVING BACKWARD")
			backward()
			sleep(0.707)
			brake()
			sleep(0.5)
		if char == ord('L'):
			print("RECIEVED LETTER L")
			print("MOVING BACKWARD")
			backward()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING BACK LEFT")
			back_left()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING BACKWARD")
			backward()
			sleep(0.5)
			brake()
			sleep(0.5)
		if char == ord('M'):
			print("RECIEVED LETTER M")
			print("MOVING FORWARD")
			forward()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING BACK LEFT")
			back_left()
			sleep(0.5)
			brake()
			sleep(0.5)
			print("MOVING BACKWARD")
			backward()
			sleep(0.707)
			brake()
			sleep(0.5)
			print("MOVING RIGHT")
			right()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(0.707)
			brake()
			sleep(0.5)
			print("MOVING BACK LEFT")
			back_left()
			sleep(0.5)
			brake()
			sleep(0.5)
			print("MOVING BACKWARD")
			backward()
			sleep(1)
			brake()
			sleep(0.5)
		if char == ord('N'):
			print("RECIEVED LETTER N")
			print("MOVING FORWARD")
			forward()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING BACK LEFT")
			back_left()
			sleep(0.5)
			brake()
			sleep(0.5)
			print("MOVING BACKWARD")
			backward()
			sleep(1.414)
			brake()
			sleep(0.5)
			print("MOVING RIGHT")
			right()
			sleep(0.5)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(1)
			brake()
			sleep(0.5)
		if char == ord('O'):
			print("RECIEVED LETTER O")
			print("MOVING FORWARD")
			forward()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING RIGHT")
			right()#90 degrees
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(0.60)
			brake()
			sleep(0.5)
			print("MOVING RIGHT")
			right()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING RIGHT")
			right()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(0.60)
			brake()
			sleep(0.5)
		if char == ord('P'):
			print("RECIEVED LETTER P")
			print("MOVING FORWARD")
			forward()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING RIGHT")
			right()
			sleep(1)
			brake()
			sleep(0.5)
			print("FORWARD")
			forward()
			sleep(0.75)
			brake()
			sleep(0.5)
			print("MOVING RIGHT")
			right()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(0.75)
			brake()
			sleep(0.5)
			print("MOVING RIGHT")
			right()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(0.75)
			brake()
			sleep(0.5)
		if char == ord('Q'):
			print("RECIEVED LETTER Q")
			print("MOVING FORWARD")
			forward()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING RIGHT")
			right()#90 degrees
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(0.75)
			brake()
			sleep(0.5)
			print("MOVING RIGHT")
			right()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING RIGHT")
			right()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(0.75)
			brake()
			sleep(0.5)
			print("MOVING BACKWARD")
			backward()
			sleep(0.75)
			brake()
			sleep(0.5)
			print("MOVING BACK RIGHT")
			back_right()
			sleep(0.5)#45 degrees
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(0.25)
			brake()
			sleep(0.5)
			print("MOVING BACKWARD")
			backward()
			sleep(0.5)
			brake()
			sleep(0.5)
		if char == ord('R'):
			print("RECIEVED LETTER R")
			print("MOVING FORWARD")
			forward()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING RIGHT")
			right()
			sleep(1)#90 degrees
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING RIGHT")
			right()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(0.5)
			brake()
			sleep(0.5)
			print("MOVING RIGHT")
			right()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING BACK RIGHT")
			back_right()
			sleep(0.5)#45 degrees
			brake()
			sleep(0.5)
			print("MOVING BACKWARD")
			backward()
			sleep(1.1)
			brake()
			sleep(0.5)
		if char == ord('S'):
			print("RECIEVED LETTER S")
			print("MOVING LEFT")
			left()
			sleep(1)#90
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING LEFT")
			left()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING LEFT")
			left()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING RIGHT")
			right()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING RIGHT")
			right()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(1)
			brake()
			sleep(0.5)
		if char == ord('T'):
			print("RECIEVED LETTER T")
			print("MOVING FORWARD")
			forward()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING RIGHT")
			right()
			sleep(1)#90
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(0.35)
			brake()
			sleep(0.5)
			print("MOVING BACKWARD")
			backward()
			sleep(0.35)
			brake()
			sleep(0.5)
		if char == ord('U'):
			print("RECIEVED LETTER U")
			print("MOVING BACKWARD")
			backward()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING RIGHT")
			right()
			sleep(1)#90
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING LEFT")
			left()
			sleep(1)#90
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(1)
		if char == ord('V'):
			print("RECIVED LETTER V")
			print("MOVING BACK LEFT")
			back_left()
			sleep(0.5)#30 degrees
			brake()
			sleep(0.5)
			print("MOVING BACKWARD")
			backward()
			sleep(1.11)
			brake()
			sleep(0.5)
			print("MOVING RIGHT")
			right()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(1.11)
			brake()
			sleep(0.5)
		if char == ord('W'):
			print("RECIEVED LETTER W")
			print("MOVING BACKWARD")
			backward()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING RIGHT")
			right()
			sleep(0.5)#45
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(0.30)
			brake()
			sleep(0.5)
			print("MOVING BACK LEFT")
			back_left()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING BACKWARD")
			backward()
			sleep(0.30)
			brake()
			sleep(0.5)
			print("MOVING RIGHT")
			right()
			sleep(0.5)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(1)
			brake()
			sleep(0.5)
		if char == ord('X'):
			print("RECIEVED LETTER X")
			print("MOVING BACK LEFT")
			back_left()
			sleep(1)#45
			brake()
			sleep(0.5)
			print("MOVING BACKWARD")
			backward()
			sleep(1.414)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(0.707)
			brake()
			sleep(0.5)
			print("MOVING RIGHT")
			right()
			sleep(1)
			print("MOVING FORWARD")
			forward()
			sleep(0.707)
			brake()
			sleep(0.5)
			print("MOVING BACKWARD")
			backward()
			sleep(1.414)
			brake()
			sleep(0.5)
		if char == ord('Y'):
			print("RECIEVED LETTER Y")
			print("MOVING BACK LEFT")
			back_left()
			sleep(0.5)#45
			brake()
			sleep(0.5)
			print("MOVING BACKWARD")
			backward()
			sleep(0.707)
			brake()
			sleep(0.5)
			print("MOVING RIGHT")
			right()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(0.707)
			brake()
			sleep(0.5)
			print("MOVING BACKWARD")
			backward()
			sleep(0.707)
			brake()
			sleep(0.5)
			print("MOVING BACK LEFT")
			back_left()
			sleep(0.5)
			brake()
			sleep(0.5)
			print("MOVING BACKWARD")
			backward()
			sleep(0.75)
			brake()
			sleep(0.5)
		if char == ord('Z'):
			print("RECIEVED LETTER Z")
			print("MOVING RIGHT")
			right()
			sleep(1)#90
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(1)
			brake()
			sleep(0.5)
			print("MOVING BACK LEFT")
			back_left()
			sleep(0.5)
			brake()
			sleep(0.5)
			print("MOVING BACKWARD")
			backward()
			sleep(1.414)
			brake()
			sleep(0.5)
			print("MOVING RIGHT")
			right()
			sleep(0.5)
			brake()
			sleep(0.5)
			print("MOVING FORWARD")
			forward()
			sleep(1)
			brake()
			sleep(0.5)
finally:
	curses.nocbreak();screen.keypad(0);curses.echo()
	curses.endwin()
